// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Infraestructure.Models;

public partial class ComercioElectronicoContext : DbContext
{
    public ComercioElectronicoContext(DbContextOptions<ComercioElectronicoContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Categoria> Categorias { get; set; }

    public virtual DbSet<Cliente> Clientes { get; set; }

    public virtual DbSet<DetallesPedido> DetallesPedidos { get; set; }

    public virtual DbSet<Inventario> Inventarios { get; set; }

    public virtual DbSet<Pedido> Pedidos { get; set; }

    public virtual DbSet<Producto> Productos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Categoria>(entity =>
        {
            entity.ToTable("CATEGORIAS");

            entity.Property(e => e.Descripcion).IsUnicode(false);
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsFixedLength();
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.ToTable("CLIENTES");

            entity.Property(e => e.Apellido)
                .HasMaxLength(50)
                .IsFixedLength();
            entity.Property(e => e.DireccionEnvio)
                .HasMaxLength(100)
                .IsFixedLength()
                .HasColumnName("Direccion_Envio");
            entity.Property(e => e.DireccionFacturacion)
                .HasMaxLength(100)
                .IsFixedLength()
                .HasColumnName("Direccion_Facturacion");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsFixedLength();
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsFixedLength();
            entity.Property(e => e.Telefono)
                .HasMaxLength(20)
                .IsFixedLength();
        });

        modelBuilder.Entity<DetallesPedido>(entity =>
        {
            entity.ToTable("DETALLES_PEDIDOS");

            entity.Property(e => e.PedidoId).HasColumnName("Pedido_Id");
            entity.Property(e => e.PrecioUnitario).HasColumnName("Precio_Unitario");
            entity.Property(e => e.ProductoId).HasColumnName("Producto_Id");

            entity.HasOne(d => d.Pedido).WithMany(p => p.DetallesPedidos)
                .HasForeignKey(d => d.PedidoId)
                .HasConstraintName("FK_DETALLES_PEDIDOS_PEDIDOS");

            entity.HasOne(d => d.Producto).WithMany(p => p.DetallesPedidos)
                .HasForeignKey(d => d.ProductoId)
                .HasConstraintName("FK_DETALLES_PEDIDOS_PRODUCTOS");
        });

        modelBuilder.Entity<Inventario>(entity =>
        {
            entity.ToTable("INVENTARIO");

            entity.Property(e => e.CantidadStock).HasColumnName("Cantidad_Stock");
            entity.Property(e => e.ProductoId).HasColumnName("Producto_Id");
            entity.Property(e => e.UbicacionAlmacen)
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("Ubicacion_Almacen");

            entity.HasOne(d => d.Producto).WithMany(p => p.Inventarios)
                .HasForeignKey(d => d.ProductoId)
                .HasConstraintName("FK_INVENTARIO_PRODUCTOS");
        });

        modelBuilder.Entity<Pedido>(entity =>
        {
            entity.ToTable("PEDIDOS");

            entity.Property(e => e.ClienteId).HasColumnName("Cliente_id");
            entity.Property(e => e.Estado)
                .HasMaxLength(50)
                .IsFixedLength();
            entity.Property(e => e.FechaPedido)
                .HasColumnType("date")
                .HasColumnName("Fecha_pedido");

            entity.HasOne(d => d.Cliente).WithMany(p => p.Pedidos)
                .HasForeignKey(d => d.ClienteId)
                .HasConstraintName("FK_PEDIDOS_CLIENTES");
        });

        modelBuilder.Entity<Producto>(entity =>
        {
            entity.ToTable("PRODUCTOS");

            entity.Property(e => e.CategoriaId).HasColumnName("Categoria_Id");
            entity.Property(e => e.ImagenUrl)
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("Imagen_URL");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsFixedLength();

            entity.HasOne(d => d.Categoria).WithMany(p => p.Productos)
                .HasForeignKey(d => d.CategoriaId)
                .HasConstraintName("FK_PRODUCTOS_CATEGORIAS");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}